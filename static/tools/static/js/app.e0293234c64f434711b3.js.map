{"version":3,"sources":["webpack:///src/App.vue","webpack:///./src/App.vue?d79b","webpack:///./src/App.vue","webpack:///src/components/Sql2Go.vue","webpack:///./src/components/Sql2Go.vue?1e70","webpack:///./src/components/Sql2Go.vue","webpack:///src/components/Json2Go.vue","webpack:///./src/components/Json2Go.vue?2e36","webpack:///./src/components/Json2Go.vue","webpack:///src/components/FormatJson.vue","webpack:///./src/components/FormatJson.vue?c258","webpack:///./src/components/FormatJson.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticStyle","padding","staticClass","mode","background-color","text-color","active-text-color","default-active","router","index","route","name","_v","float","href","staticRenderFns","src_App","__webpack_require__","normalizeComponent","metaInfo","meta","content","ssrContext","Sql2Go","data","msg","useGorm","useJson","useForm","sqlContent","watch","computed","[object Object]","sql2go","methods","val","typeMaps","tinyint","smallint","int","mediumint","bigint","double","decimal","char","varchar","text","mediumtext","longtext","time","date","datetime","timestramp","enum","set","blob","titleCase","str","array","toLowerCase","split","i","length","toUpperCase","substring","join","toProperCase","commonInitialisms","replace","unused","sep","frag","indexOf","substr","trim","res","exec","structArr","structName","fields","structResult","fieldName","fieldType","fieldJsonName","push","components_Sql2Go","gutter","span","label","border","model","value","callback","$$v","expression","type","placeholder","rows","structContent","src_components_Sql2Go","Sql2Go_normalizeComponent","Json2Go","flatten","jsonContent","jsonToGo","json","scope","go","tabs","seen","stack","accumulator","innerTabs","parent","JSON","parse","e","message","append","format","parseScope","depth","Array","isArray","sliceType","scopeLength","thisType","goType","mostSpecificPossibleGoType","slice","includes","appender","allFields","keys","Object","k","keyname","existingValue","currentValue","compareObjects","compareObjectKeys","c","r","Math","random","v","toString","count","struct","omitempty","elem","parseStruct","parentType","scopeKeys","formatScopeKeys","pop","getOriginalName","indenter","typename","jsonStr","indent","match","charAt","0","1","2","3","4","5","6","7","8","9","test","typ1","typ2","unique","reLiteralUUID","tail","objectA","objectB","prototype","call","itemAKeys","itemBKeys","lengthA","lengthB","item","components_Json2Go","text-align","src_components_Json2Go","Json2Go_normalizeComponent","FormatJson","escapeUnicode","sortObjectKeys","jsonPatternOk","jsonFormat","$options","formatJson","document","getElementById","innerHTML","obj","options","navigationBar","JSONEditor","expandAll","stringify","components_FormatJson","height","directives","rawName","src_components_FormatJson","FormatJson_normalizeComponent","VueRouter","routes","path","component","Vue","config","productionTip","use","Meta","el","components","App","template"],"mappings":"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","file":"static/js/app.e0293234c64f434711b3.js","sourcesContent":["<template>\n    <div id=\"app\">\n        <el-header style=\"padding: 0\">\n            <el-menu\n                class=\"el-menu-demo\"\n                mode=\"horizontal\"\n                background-color=\"#545c64\"\n                text-color=\"#fff\"\n                active-text-color=\"#ffd04b\"\n                default-active=\"1\"\n                router=\"true\"\n                >\n\n                <el-menu-item index=\"1\" :route=\"{name: 'Sql2Go'}\">SQL转Struct</el-menu-item>\n                <el-menu-item index=\"2\" :route=\"{name: 'Json2Go'}\">Json转Struct</el-menu-item>\n                <el-menu-item index=\"3\" :route=\"{name:'FormatJson'}\">Json格式化</el-menu-item>\n\n                <el-menu-item style=\"float:right\"><a href=\"https://blog.lpflpf.cn\">博客</a></el-menu-item>\n                <el-menu-item style=\"float:right\"><a href=\"https://github.com/lpflpf\">github</a></el-menu-item>\n            </el-menu>\n        </el-header>\n        <router-view/>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nexport default {\n    name: 'App',\n    metaInfo: {\n        meta: [\n            { \n                name: \"viewport\", \n                content: \"width=device-width, initial-scale=0,user-scalable=no,maximum-scale=1.0\"\n            },\n        ]\n    }\n}\n</script>\n\n<style>\n#app {\n\n}\n\na {\n    text-decoration: blink;\n}\n\nbody {\n    margin: 0px;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('el-header',{staticStyle:{\"padding\":\"0\"}},[_c('el-menu',{staticClass:\"el-menu-demo\",attrs:{\"mode\":\"horizontal\",\"background-color\":\"#545c64\",\"text-color\":\"#fff\",\"active-text-color\":\"#ffd04b\",\"default-active\":\"1\",\"router\":\"true\"}},[_c('el-menu-item',{attrs:{\"index\":\"1\",\"route\":{name: 'Sql2Go'}}},[_vm._v(\"SQL转Struct\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"2\",\"route\":{name: 'Json2Go'}}},[_vm._v(\"Json转Struct\")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"3\",\"route\":{name:'FormatJson'}}},[_vm._v(\"Json格式化\")]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"float\":\"right\"}},[_c('a',{attrs:{\"href\":\"https://blog.lpflpf.cn\"}},[_vm._v(\"博客\")])]),_vm._v(\" \"),_c('el-menu-item',{staticStyle:{\"float\":\"right\"}},[_c('a',{attrs:{\"href\":\"https://github.com/lpflpf\"}},[_vm._v(\"github\")])])],1)],1),_vm._v(\" \"),_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6b44ab24\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6b44ab24\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6b44ab24\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <el-main class=\"Sql2Go\">\n    <el-row :gutter=\"24\">\n      <h2>\n        <el-col :span=\"20\">\n          <el-checkbox v-model=\"useGorm\" label=\"gorm\" border>gorm</el-checkbox>\n          <el-checkbox v-model=\"useJson\" label=\"json\" border>json</el-checkbox>\n          <el-checkbox v-model=\"useForm\" label=\"form\" border>form</el-checkbox>\n        </el-col>\n      </h2>\n    </el-row>\n    <el-row :gutter=\"24\" class=\"textareatitle\">\n      <el-col :span=\"12\">\n          <h3> sql </h3>\n      </el-col>\n      <el-col :span=\"12\" >\n          <h3>go struct</h3>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"24\" >\n      <el-col :span=\"12\" style=\"padding:0;\">\n          <el-input type=\"textarea\" placeholder=\"建表语句\" :rows=\"32\" v-model=\"sqlContent\" class=\"leftinput\"></el-input>\n      </el-col>\n      <el-col :span=\"12\" style=\"padding:0;\">\n          <el-input type=\"textarea\" placeholder=\"Golang Struct 语句\" :rows=\"32\" :value=\"structContent\" class=\"rightinput\"></el-input> </el-col>\n      </el-col>\n    </el-row>\n  </el-main>\n</template>\n\n<script>\n/* eslint-disable */\n  export default {\n    name: 'Sql2Go',\n    data() {\n      return {\n        msg: 'sql convert to golang struct',\n        useGorm: true,\n        useJson: true,\n        useForm: true,\n        sqlContent: '',\n      }\n    },\n    watch: {\n    },\n    computed: {\n      structContent() {\n        return this.sql2go(this.sqlContent, this.useGorm, this.useJson, this.useForm)\n      }\n    },\n    methods: {\n      sql2go: function (val, useGorm, useJson, useForm) {\n        let typeMaps = {\n          'tinyint': 'int64', 'smallint': 'int64', 'int': 'int64', 'mediumint': 'int64', 'bigint': 'int64',\n          'float': 'float64', 'double': 'float64', 'decimal': 'float64', 'char': 'string',\n          'varchar': 'string', 'text': 'string', 'mediumtext': 'string', 'longtext': 'string',\n          'time': 'time.Time', 'date': 'time.Time', 'datetime': 'time.Time', 'timestramp': 'int64',\n          'enum': 'string', 'set': 'string', 'blob': 'string'\n        }\n\n        function titleCase(str) {\n          const array = str.toLowerCase().split(\"_\");\n          for (let i = 0; i < array.length; i++) {\n            array[i] = array[i][0].toUpperCase() + array[i].substring(1, array[i].length);\n          }\n          return array.join(\"\");\n        }\n\n        function toProperCase(str) {\n          // https://github.com/golang/lint/blob/5614ed5bae6fb75893070bdc0996a68765fdd275/lint.go#L771-L810\n          const commonInitialisms = [\n            \"ACL\", \"API\", \"ASCII\", \"CPU\", \"CSS\", \"DNS\", \"EOF\", \"GUID\", \"HTML\", \"HTTP\",\n            \"HTTPS\", \"ID\", \"IP\", \"JSON\", \"LHS\", \"QPS\", \"RAM\", \"RHS\", \"RPC\", \"SLA\",\n            \"SMTP\", \"SQL\", \"SSH\", \"TCP\", \"TLS\", \"TTL\", \"UDP\", \"UI\", \"UID\", \"UUID\",\n            \"URI\", \"URL\", \"UTF8\", \"VM\", \"XML\", \"XMPP\", \"XSRF\", \"XSS\"\n          ];\n\n          return str.replace(/(^|[^a-zA-Z])([a-z]+)/g, function (unused, sep, frag) {\n            if (commonInitialisms.indexOf(frag.toUpperCase()) >= 0)\n              return sep + frag.toUpperCase();\n            else\n              return sep + frag[0].toUpperCase() + frag.substr(1).toLowerCase();\n          }).replace(/([A-Z])([a-z]+)/g, function (unused, sep, frag) {\n            if (commonInitialisms.indexOf(sep + frag.toUpperCase()) >= 0)\n              return (sep + frag).toUpperCase();\n            else\n              return sep + frag;\n          });\n        }\n\n        if (val.trim() === \"\") {\n          return ''\n        }\n\n        let res = /CREATE\\sTABLE\\s`([\\w_]+)\\`\\s\\(/igm.exec(val)\n\n        if (!res) {\n          return 'invalid sql'\n        }\n        let structName = titleCase(res[1].trim()), fields = val.substring(res[0].length).trim(), structArr\n\n        let structResult = 'type ' + structName + \" struct {\";\n        for (; ;) {\n          res = /^\\`([\\w_]+)\\`\\s+(tinyint|smallint|int|mediumint|bigint|float|double|decimal|varchar|char|text|mediumtext|longtext|datetime|time|date|enum|set|blob)?.*[^`]+/.exec(fields)\n          if (!res) {\n            break\n          }\n          let fieldName = titleCase(res[1]);\n          const fieldType = typeMaps[res[2]];\n          let fieldJsonName = res[1].toLowerCase();\n          fieldName = toProperCase(fieldName)\n\n          structResult += '\\n\\t' + fieldName + ' ' + fieldType + ' '\n          structArr = []\n          if (useGorm) {\n            structArr.push('gorm:\"column:' + fieldJsonName + '\"')\n          }\n          if (useJson) {\n            structArr.push('json:\"' + fieldJsonName + '\"')\n          }\n          if (useForm) {\n            structArr.push('form:\"' + fieldJsonName + '\"')\n          }\n\n\n          if (structArr.length > 0) {\n            structResult += '`' + structArr.join(' ') + '`'\n          }\n\n          fields = fields.substring(res[0].length)\n\n          res = /COMMENT\\s+['\"](.*)['\"]/ig.exec(res[0])\n\n          if (res) {\n            structResult += \"  // \" + res[1]\n          }\n        }\n        structResult += '\\n}'\n        return structResult;\n      },\n    }\n  }\n</script>\n\n<style>\n.leftinput textarea {\n    background: aliceblue;\n}\n\n.rightinput textarea {\n    background: beige;\n}\n\n.textareatitle h3{\n    margin: 0;\n    text-align:center;\n    padding-top:10px;\n    padding-bottom:10px;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Sql2Go.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-main',{staticClass:\"Sql2Go\"},[_c('el-row',{attrs:{\"gutter\":24}},[_c('h2',[_c('el-col',{attrs:{\"span\":20}},[_c('el-checkbox',{attrs:{\"label\":\"gorm\",\"border\":\"\"},model:{value:(_vm.useGorm),callback:function ($$v) {_vm.useGorm=$$v},expression:\"useGorm\"}},[_vm._v(\"gorm\")]),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"label\":\"json\",\"border\":\"\"},model:{value:(_vm.useJson),callback:function ($$v) {_vm.useJson=$$v},expression:\"useJson\"}},[_vm._v(\"json\")]),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"label\":\"form\",\"border\":\"\"},model:{value:(_vm.useForm),callback:function ($$v) {_vm.useForm=$$v},expression:\"useForm\"}},[_vm._v(\"form\")])],1)],1)]),_vm._v(\" \"),_c('el-row',{staticClass:\"textareatitle\",attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',[_vm._v(\" sql \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',[_vm._v(\"go struct\")])])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":24}},[_c('el-col',{staticStyle:{\"padding\":\"0\"},attrs:{\"span\":12}},[_c('el-input',{staticClass:\"leftinput\",attrs:{\"type\":\"textarea\",\"placeholder\":\"建表语句\",\"rows\":32},model:{value:(_vm.sqlContent),callback:function ($$v) {_vm.sqlContent=$$v},expression:\"sqlContent\"}})],1),_vm._v(\" \"),_c('el-col',{staticStyle:{\"padding\":\"0\"},attrs:{\"span\":12}},[_c('el-input',{staticClass:\"rightinput\",attrs:{\"type\":\"textarea\",\"placeholder\":\"Golang Struct 语句\",\"rows\":32,\"value\":_vm.structContent}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a786eaf2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Sql2Go.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a786eaf2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Sql2Go.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Sql2Go.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Sql2Go.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a786eaf2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Sql2Go.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Sql2Go.vue\n// module id = null\n// module chunks = ","<template>\n  <el-main class=\"Json2Go\">\n    <el-row :gutter=\"24\">\n      <h2>\n\n        <el-col :span=\"20\">\n          <el-checkbox v-model=\"useGorm\" label=\"gorm\" border>gorm</el-checkbox>\n          <el-checkbox v-model=\"useJson\" label=\"json\" border></el-checkbox>\n          <el-checkbox v-model=\"useForm\" label=\"form\" border></el-checkbox>\n          <el-checkbox v-model=\"flatten\" label=\"flatten\" border></el-checkbox>\n        </el-col>\n      </h2>\n    </el-row>\n    <el-row :gutter=\"24\" style=\"text-align: center;\"  class=\"textareatitle\">\n      <el-col :span=\"12\">\n          <h3> Json</h3>\n      </el-col>\n      <el-col :span=\"12\" >\n          <h3>go struct</h3>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"24\" >\n      <el-col :span=\"12\" style=\"padding:0\">\n          <el-input type=\"textarea\" placeholder=\"输入 Json 结构\" :rows=\"32\" v-model=\"jsonContent\" class=\"leftinput\"></el-input>\n      </el-col>\n      <el-col :span=\"12\" style=\"padding:0\">\n        <el-input type=\"textarea\" placeholder=\"Golang struct 语句\" :rows=\"32\" :value=\"structContent\" class=\"rightinput\"> </el-input>\n          </el-col>\n    </el-row>\n  </el-main>\n</template>\n\n<script>\n/* eslint-disable */\n  export default {\n    name: 'Json2Go',\n    data() {\n      return {\n        msg: 'json convert to golang struct',\n        useGorm: true,\n        useJson: true,\n        useForm: true,\n        flatten: true,\n        jsonContent: '',\n        // structContent: '',\n      }\n    },\n    computed: {\n      structContent() {\n\n        if (this.jsonContent === \"\"){\n          return \"\"\n        }\n\n        return this.jsonToGo(this.jsonContent, this.useGorm, this.useJson, this.useForm, this.flatten)\n      }\n    },\n    methods: {\n      jsonToGo: function (json, useGorm, useJson, useForm, flatten = true) {\n        let data;\n        let scope;\n        let go = \"\";\n        let tabs = 0;\n\n        const seen = {};\n        const stack = [];\n        let accumulator = \"\";\n        let innerTabs = 0;\n        let parent = \"\";\n\n        try {\n          data = JSON.parse(json.replace(/:(\\s*\\d*)\\.0/g, \":$1.1\")); // hack that forces floats to stay as floats\n          scope = data;\n        } catch (e) {\n          return e.message\n        }\n\n        let typename = format(\"AutoGenerated\");\n        append(`type ${typename} `);\n\n        parseScope(scope);\n\n        return flatten\n          ? go += accumulator\n          : go\n\n\n        function parseScope(scope, depth = 0) {\n          if (typeof scope === \"object\" && scope !== null) {\n            if (Array.isArray(scope)) {\n              let sliceType;\n              const scopeLength = scope.length;\n\n              for (let i = 0; i < scopeLength; i++) {\n                const thisType = goType(scope[i]);\n                if (!sliceType)\n                  sliceType = thisType;\n                else if (sliceType != thisType) {\n                  sliceType = mostSpecificPossibleGoType(thisType, sliceType);\n                  if (sliceType == \"interface{}\")\n                    break;\n                }\n              }\n\n              const slice = flatten && [\"struct\", \"slice\"].includes(sliceType)\n                ? `[]${parent}`\n                : `[]`;\n\n              if (flatten && depth >= 2)\n                appender(slice);\n              else\n                append(slice)\n              if (sliceType == \"struct\") {\n                const allFields = {};\n\n                // for each field counts how many times appears\n                for (let i = 0; i < scopeLength; i++) {\n                  const keys = Object.keys(scope[i])\n                  for (let k in keys) {\n                    let keyname = keys[k];\n                    if (!(keyname in allFields)) {\n                      allFields[keyname] = {\n                        value: scope[i][keyname],\n                        count: 0\n                      }\n                    } else {\n                      const existingValue = allFields[keyname].value;\n                      const currentValue = scope[i][keyname];\n\n                      if (compareObjects(existingValue, currentValue)) {\n                        const comparisonResult = compareObjectKeys(\n                          Object.keys(currentValue),\n                          Object.keys(existingValue)\n                        )\n                        if (!comparisonResult) {\n                          keyname = `${keyname}_${uuidv4()}`;\n                          allFields[keyname] = {\n                            value: currentValue,\n                            count: 0\n                          };\n                        }\n                      }\n                    }\n                    allFields[keyname].count++;\n                  }\n                }\n\n                // create a common struct with all fields found in the current array\n                // omitempty dict indicates if a field is optional\n                const keys = Object.keys(allFields), struct = {}, omitempty = {};\n                for (let k in keys) {\n                  const keyname = keys[k], elem = allFields[keyname];\n\n                  struct[keyname] = elem.value;\n                  omitempty[keyname] = elem.count != scopeLength;\n                }\n                parseStruct(depth + 1, innerTabs, struct, omitempty); // finally parse the struct !!\n              } else if (sliceType == \"slice\") {\n                parseScope(scope[0], depth)\n              } else {\n                if (flatten && depth >= 2) {\n                  appender(sliceType || \"interface{}\");\n                } else {\n                  append(sliceType || \"interface{}\");\n                }\n              }\n            } else {\n              if (flatten) {\n                if (depth >= 2) {\n                  appender(parent)\n                } else {\n                  append(parent)\n                }\n              }\n              parseStruct(depth + 1, innerTabs, scope);\n            }\n          } else {\n            if (flatten && depth >= 2) {\n              appender(goType(scope));\n            } else {\n              append(goType(scope));\n            }\n          }\n        }\n\n        function parseStruct(depth, innerTabs, scope, omitempty) {\n          if (flatten) {\n            stack.push(\n              depth >= 2\n                ? \"\\n\"\n                : \"\"\n            )\n          }\n\n          if (flatten && depth >= 2) {\n            const parentType = `type ${parent}`;\n            const scopeKeys = formatScopeKeys(Object.keys(scope));\n\n            // this can only handle two duplicate items\n            // future improvement will handle the case where there could\n            // three or more duplicate keys with different values\n            if (parent in seen && compareObjectKeys(scopeKeys, seen[parent])) {\n              stack.pop();\n              return\n            }\n            seen[parent] = scopeKeys;\n\n            appender(`${parentType} struct {\\n`);\n            ++innerTabs;\n            const keys = Object.keys(scope);\n            for (let i in keys) {\n              const keyname = getOriginalName(keys[i]);\n              indenter(innerTabs)\n              const typename = format(keyname)\n              appender(typename + \" \");\n              parent = typename\n              parseScope(scope[keys[i]], depth);\n\n              let structArr = []\n              if (useGorm) {\n                structArr.push('gorm:\"column:' + keyname + '\"')\n              }\n              if (useJson) {\n                let jsonStr = 'json:\"' + keyname\n                if (omitempty && omitempty[keys[i]] === true) {\n                  jsonStr += ',omitempty\"';\n                } else {\n                  jsonStr += '\"'\n                }\n                structArr.push(jsonStr)\n              }\n              if (useForm) {\n                structArr.push('form:\"' + keyname + '\"')\n              }\n\n              if (structArr.length > 0) {\n                appender(' `' + structArr.join(\" \") + '`')\n              }\n\n              appender('\\n');\n            }\n            indenter(--innerTabs);\n            appender(\"}\");\n          } else {\n            append(\"struct {\\n\");\n            ++tabs;\n            const keys = Object.keys(scope);\n            for (let i in keys) {\n              const keyname = getOriginalName(keys[i]);\n              indent(tabs);\n              const typename = format(keyname);\n              append(typename + \" \");\n              parent = typename\n              parseScope(scope[keys[i]], depth);\n\n              let structArr = []\n              if (useGorm) {\n                structArr.push('gorm:\"column:' + keyname + '\"')\n              }\n              if (useJson) {\n                let jsonStr = 'json:\"' + keyname\n                if (omitempty && omitempty[keys[i]] === true) {\n                  jsonStr += ',omitempty\"';\n                } else {\n                  jsonStr += '\"'\n                }\n                structArr.push(jsonStr)\n              }\n              if (useForm) {\n                structArr.push('form:\"' + keyname + '\"')\n              }\n\n              if (structArr.length > 0) {\n                append('`' + structArr.join(\" \") + '`')\n              }\n              append('\\n');\n            }\n            indent(--tabs);\n            append(\"}\");\n          }\n          if (flatten)\n            accumulator += stack.pop();\n        }\n\n        function indent(tabs) {\n          for (let i = 0; i < tabs; i++)\n            go += '\\t';\n        }\n\n        function append(str) {\n          go += str;\n        }\n\n        function indenter(tabs) {\n          for (let i = 0; i < tabs; i++)\n            stack[stack.length - 1] += '\\t';\n        }\n\n        function appender(str) {\n          stack[stack.length - 1] += str;\n        }\n\n        // Sanitizes and formats a string to make an appropriate identifier in Go\n        function format(str) {\n          if (!str)\n            return \"\";\n          else if (str.match(/^\\d+$/))\n            str = \"Num\" + str;\n          else if (str.charAt(0).match(/\\d/)) {\n            const numbers = {\n              '0': \"Zero_\", '1': \"One_\", '2': \"Two_\", '3': \"Three_\",\n              '4': \"Four_\", '5': \"Five_\", '6': \"Six_\", '7': \"Seven_\",\n              '8': \"Eight_\", '9': \"Nine_\"\n            };\n            str = numbers[str.charAt(0)] + str.substr(1);\n          }\n          return toProperCase(str).replace(/[^a-z0-9]/ig, \"\") || \"NAMING_FAILED\";\n        }\n\n        // Determines the most appropriate Go type\n        function goType(val) {\n          if (val === null)\n            return \"interface{}\";\n\n          switch (typeof val) {\n            case \"string\":\n              if (/\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(\\+\\d\\d:\\d\\d|Z)/.test(val))\n                return \"time.Time\";\n              else\n                return \"string\";\n            case \"number\":\n              if (val % 1 === 0) {\n                if (val > -2147483648 && val < 2147483647)\n                  return \"int\";\n                else\n                  return \"int64\";\n              } else\n                return \"float64\";\n            case \"boolean\":\n              return \"bool\";\n            case \"object\":\n              if (Array.isArray(val))\n                return \"slice\";\n              return \"struct\";\n            default:\n              return \"interface{}\";\n          }\n        }\n\n        // Given two types, returns the more specific of the two\n        function mostSpecificPossibleGoType(typ1, typ2) {\n          if (typ1.substr(0, 5) == \"float\"\n            && typ2.substr(0, 3) == \"int\")\n            return typ1;\n          else if (typ1.substr(0, 3) == \"int\"\n            && typ2.substr(0, 5) == \"float\")\n            return typ2;\n          else\n            return \"interface{}\";\n        }\n\n        // Proper cases a string according to Go conventions\n        function toProperCase(str) {\n          // https://github.com/golang/lint/blob/5614ed5bae6fb75893070bdc0996a68765fdd275/lint.go#L771-L810\n          const commonInitialisms = [\n            \"ACL\", \"API\", \"ASCII\", \"CPU\", \"CSS\", \"DNS\", \"EOF\", \"GUID\", \"HTML\", \"HTTP\",\n            \"HTTPS\", \"ID\", \"IP\", \"JSON\", \"LHS\", \"QPS\", \"RAM\", \"RHS\", \"RPC\", \"SLA\",\n            \"SMTP\", \"SQL\", \"SSH\", \"TCP\", \"TLS\", \"TTL\", \"UDP\", \"UI\", \"UID\", \"UUID\",\n            \"URI\", \"URL\", \"UTF8\", \"VM\", \"XML\", \"XMPP\", \"XSRF\", \"XSS\"\n          ];\n\n          return str.replace(/(^|[^a-zA-Z])([a-z]+)/g, function (unused, sep, frag) {\n            if (commonInitialisms.indexOf(frag.toUpperCase()) >= 0)\n              return sep + frag.toUpperCase();\n            else\n              return sep + frag[0].toUpperCase() + frag.substr(1).toLowerCase();\n          }).replace(/([A-Z])([a-z]+)/g, function (unused, sep, frag) {\n            if (commonInitialisms.indexOf(sep + frag.toUpperCase()) >= 0)\n              return (sep + frag).toUpperCase();\n            else\n              return sep + frag;\n          });\n        }\n\n        function uuidv4() {\n          return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n          });\n        }\n\n        function getOriginalName(unique) {\n          const reLiteralUUID = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n          const uuidLength = 36;\n\n          if (unique.length >= uuidLength) {\n            const tail = unique.substr(-uuidLength);\n            if (reLiteralUUID.test(tail)) {\n              return unique.slice(0, -1 * (uuidLength + 1))\n            }\n          }\n          return unique\n        }\n\n        function compareObjects(objectA, objectB) {\n          const object = \"[object Object]\";\n          return Object.prototype.toString.call(objectA) === object\n            && Object.prototype.toString.call(objectB) === object;\n        }\n\n        function compareObjectKeys(itemAKeys, itemBKeys) {\n          const lengthA = itemAKeys.length;\n          const lengthB = itemBKeys.length;\n\n          // nothing to compare, probably identical\n          if (lengthA == 0 && lengthB == 0)\n            return true;\n\n          // duh\n          if (lengthA != lengthB)\n            return false;\n\n          for (let item of itemAKeys) {\n            if (!itemBKeys.includes(item))\n              return false;\n          }\n          return true;\n        }\n\n        function formatScopeKeys(keys) {\n          for (let i in keys) {\n            keys[i] = format(keys[i]);\n          }\n          return keys\n        }\n      }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n\n\n\n// WEBPACK FOOTER //\n// src/components/Json2Go.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-main',{staticClass:\"Json2Go\"},[_c('el-row',{attrs:{\"gutter\":24}},[_c('h2',[_c('el-col',{attrs:{\"span\":20}},[_c('el-checkbox',{attrs:{\"label\":\"gorm\",\"border\":\"\"},model:{value:(_vm.useGorm),callback:function ($$v) {_vm.useGorm=$$v},expression:\"useGorm\"}},[_vm._v(\"gorm\")]),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"label\":\"json\",\"border\":\"\"},model:{value:(_vm.useJson),callback:function ($$v) {_vm.useJson=$$v},expression:\"useJson\"}}),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"label\":\"form\",\"border\":\"\"},model:{value:(_vm.useForm),callback:function ($$v) {_vm.useForm=$$v},expression:\"useForm\"}}),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"label\":\"flatten\",\"border\":\"\"},model:{value:(_vm.flatten),callback:function ($$v) {_vm.flatten=$$v},expression:\"flatten\"}})],1)],1)]),_vm._v(\" \"),_c('el-row',{staticClass:\"textareatitle\",staticStyle:{\"text-align\":\"center\"},attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',[_vm._v(\" Json\")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',[_vm._v(\"go struct\")])])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":24}},[_c('el-col',{staticStyle:{\"padding\":\"0\"},attrs:{\"span\":12}},[_c('el-input',{staticClass:\"leftinput\",attrs:{\"type\":\"textarea\",\"placeholder\":\"输入 Json 结构\",\"rows\":32},model:{value:(_vm.jsonContent),callback:function ($$v) {_vm.jsonContent=$$v},expression:\"jsonContent\"}})],1),_vm._v(\" \"),_c('el-col',{staticStyle:{\"padding\":\"0\"},attrs:{\"span\":12}},[_c('el-input',{staticClass:\"rightinput\",attrs:{\"type\":\"textarea\",\"placeholder\":\"Golang struct 语句\",\"rows\":32,\"value\":_vm.structContent}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8ddd8a5e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Json2Go.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Json2Go.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Json2Go.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8ddd8a5e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Json2Go.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Json2Go.vue\n// module id = null\n// module chunks = ","<template>\n  <el-main class=\"Json2Go\">\n    <el-row :gutter=\"24\">\n      <h2>\n\n        <el-col :span=\"20\">\n          <el-checkbox v-model=\"sortObjectKeys\" label=\"sortKeys\" border></el-checkbox>\n          <el-checkbox v-model=\"escapeUnicode\" label=\"escapeUnicode\" border></el-checkbox>\n        </el-col>\n      </h2>\n    </el-row>\n\n    <el-row :gutter=\"24\" class=\"textareatitle\">\n      <el-col :span=\"12\">\n          <h3> Json</h3>\n      </el-col>\n      <el-col :span=\"12\" >\n          <h3> Result</h3>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"24\" style=\"padding:0;\">\n      <el-col :span=\"12\">\n              <el-input type=\"textarea\" placeholder=\"输入 Json 语句\" :rows=\"32\" v-model=\"jsonContent\" class=\"leftinput\"></el-input>\n      </el-col>\n      <el-col :span=\"12\" style=\"height: 600px\">\n              <div id=\"jsoneditor\" v-show=\"jsonPatternOk\"></div>\n              <el-input type=\"textarea\" :rows=\"32\" v-model=\"jsonFormat\" v-show=\"!jsonPatternOk\"></el-input>\n      </el-col>\n    </el-row>\n  </el-main>\n</template>\n\n<script>\n/* eslint-disable */\n//  import JSONEditor from \"jsoneditor\"\n//  import 'jsoneditor/dist/jsoneditor.min.css'\n\n  export default {\n    name: 'FormatJson',\n    data() {\n      return {\n        msg: '格式化json',\n        jsonContent: '',\n        escapeUnicode: true,\n        sortObjectKeys: true,\n        jsonPatternOk: true,\n        jsonFormat: '',\n      }\n    },\n    watch: {\n      jsonContent(val) {\n        let _self = this\n        this.$options.methods.formatJson(_self, val, this.escapeUnicode, _self.sortObjectKeys)\n      },\n      escapeUnicode(val) {\n        let _self = this\n        this.$options.methods.formatJson(_self, this.jsonContent, val, _self.sortObjectKeys)\n      },\n      sortObjectKeys(val) {\n        let _self = this\n        this.$options.methods.formatJson(_self, this.jsonContent, this.escapeUnicode, val)\n      }\n    },\n    methods: {\n      formatJson(_self, val, escapeUnicode, sortObjectKeys) {\n        if (_self.jsonPatternOk) {\n          document.getElementById(\"jsoneditor\").innerHTML = \"\"\n        }\n        _self.jsonPatternOk = true\n        _self.jsonFormat = ''\n\n        if (val === \"\"){\n          return\n        }\n        try {\n          let obj = JSON.parse(val)\n          let options = {\n            mode: \"view\",\n            escapeUnicode: escapeUnicode,\n            sortObjectKeys: sortObjectKeys,\n            navigationBar: false\n          }\n          let editor = new JSONEditor(document.getElementById(\"jsoneditor\"), options, obj)\n          editor.expandAll()\n          _self.jsonFormat = \"\"\n\n          _self.jsonContent = JSON.stringify(obj, null, \"  \")\n        } catch (e) {\n          _self.jsonPatternOk = false\n          _self.jsonFormat = e.message\n        }\n      }\n    }\n  }\n\n</script>\n<style>\n.leftinput textarea {\n    background: aliceblue;\n}\n.textareatitle h3{\n    margin: 0;\n    text-align:center;\n    padding-top:10px;\n    padding-bottom:10px;\n}\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/FormatJson.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-main',{staticClass:\"Json2Go\"},[_c('el-row',{attrs:{\"gutter\":24}},[_c('h2',[_c('el-col',{attrs:{\"span\":20}},[_c('el-checkbox',{attrs:{\"label\":\"sortKeys\",\"border\":\"\"},model:{value:(_vm.sortObjectKeys),callback:function ($$v) {_vm.sortObjectKeys=$$v},expression:\"sortObjectKeys\"}}),_vm._v(\" \"),_c('el-checkbox',{attrs:{\"label\":\"escapeUnicode\",\"border\":\"\"},model:{value:(_vm.escapeUnicode),callback:function ($$v) {_vm.escapeUnicode=$$v},expression:\"escapeUnicode\"}})],1)],1)]),_vm._v(\" \"),_c('el-row',{staticClass:\"textareatitle\",attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',[_vm._v(\" Json\")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',[_vm._v(\" Result\")])])],1),_vm._v(\" \"),_c('el-row',{staticStyle:{\"padding\":\"0\"},attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-input',{staticClass:\"leftinput\",attrs:{\"type\":\"textarea\",\"placeholder\":\"输入 Json 语句\",\"rows\":32},model:{value:(_vm.jsonContent),callback:function ($$v) {_vm.jsonContent=$$v},expression:\"jsonContent\"}})],1),_vm._v(\" \"),_c('el-col',{staticStyle:{\"height\":\"600px\"},attrs:{\"span\":12}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.jsonPatternOk),expression:\"jsonPatternOk\"}],attrs:{\"id\":\"jsoneditor\"}}),_vm._v(\" \"),_c('el-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.jsonPatternOk),expression:\"!jsonPatternOk\"}],attrs:{\"type\":\"textarea\",\"rows\":32},model:{value:(_vm.jsonFormat),callback:function ($$v) {_vm.jsonFormat=$$v},expression:\"jsonFormat\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a26c3b80\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/FormatJson.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a26c3b80\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FormatJson.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FormatJson.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FormatJson.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a26c3b80\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./FormatJson.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/FormatJson.vue\n// module id = null\n// module chunks = ","import Sql2Go from '../components/Sql2Go'\nimport Json2Go from '../components/Json2Go'\nimport FormatJson from '../components/FormatJson'\n\n/* global VueRouter */\n\n/* eslint-disable */\n\nexport default new VueRouter({\n  routes: [\n    {\n      path: '/',\n      name: 'Sql2Go',\n      component: Sql2Go\n    },\n    {\n      path: '/json2go',\n      name: 'Json2Go',\n      component: Json2Go\n    },\n    {\n      path: '/formatJson',\n      name: 'FormatJson',\n      component: FormatJson\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n// import Vue from 'vue'\n\n/* eslint-disable */\n// import ElementUI from 'element-ui'\n// import 'element-ui/lib/theme-chalk/index.css'\nimport App from './App'\nimport router from './router'\nimport Meta from \"vue-meta\"\n\n/* global Vue */\n\n// Vue.use(ElementUI)\nVue.config.productionTip = false\nVue.use(Meta)\n\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}